{"componentChunkName":"component---node-modules-ocular-gatsby-src-templates-doc-page-markdown-jsx","path":"/docs/advanced/custom-layout","webpackCompilationHash":"eef5c1567fe18bba9353","result":{"data":{"docBySlug":{"html":"<h1 id=\"write-your-own-custom-layout\"><a href=\"#write-your-own-custom-layout\" aria-label=\"write your own custom layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Write your own custom layout</h1>\n<p>Here's the method you will likely to implement when creating your own custom layout:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>BaseLayout<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'graph.gl'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyLayout</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseLayout</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// initialize the layout</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// first time to pass the graph data into this layout</span>\n  <span class=\"token function\">initializeGraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">graph</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// update the existing graph</span>\n  <span class=\"token function\">updateGraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">grpah</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// start the layout calculation</span>\n  <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// resume the layout calculation manually</span>\n  <span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// stop the layout calculation manually</span>\n  <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// access the position of the node in the layout</span>\n  <span class=\"token function\">getNodePosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// access the layout information of the edge</span>\n  <span class=\"token function\">getEdgePosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edge</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Pin the node to a designated position, and the node won't move anymore</span>\n  <span class=\"token function\">lockNodePosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Unlock the node, the node will be able to move freely.</span>\n  <span class=\"token function\">unlockNodePosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We will start with a <code class=\"language-text\">RandomLayout</code> as an example, you can follow the steps one by one and find the source code at the bottom.</p>\n<h2 id=\"life-cycle\"><a href=\"#life-cycle\" aria-label=\"life cycle permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Life cycle</h2>\n<p>[first time]\nconstructor => initializeGraph => start</p>\n<p>[update graph]\nupdateGraph => start</p>\n<hr>\n<p>[callbacks]\n<code class=\"language-text\">this._callbacks.onLayoutChange();</code> => re-render => getNodePosition/getEdgePosition\n<code class=\"language-text\">this._callbacks.onLayoutDone();</code> => notify user.</p>\n<p>--\n[Dragging]\nstartDragging => lockNodePosition => release => unlockNodePosition => resume</p>\n<h2 id=\"constructor\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor</h2>\n<p>In the constructor, you can initialize some internal object you'll need for the layout state.\nThe most important part is to create a 'map' to keep the position of nodes.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RandomLayout</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseLayout</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">static</span> defaultOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    viewportWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n    viewportHeight<span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// init BaseLayout</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// give a name to this layout</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> <span class=\"token string\">'RandomLayout'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// combine the default options with user input</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>this<span class=\"token punctuation\">.</span>defaultOptions<span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>options<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// a map to persis the position of nodes.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"update-the-graph-data\"><a href=\"#update-the-graph-data\" aria-label=\"update the graph data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update the graph data</h2>\n<p>GraphGL will call <code class=\"language-text\">initializeGraph</code> to pass the graph data into the layout.\nIf the graph is the same one but part ofthe data is changed, GraphGL will call <code class=\"language-text\">updateGraph</code> method to notify the layout.</p>\n<p>In this case, we can just simply update the <code class=\"language-text\">this._nodePositionMap</code> by going through all nodes in the graph.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">initializeGraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">graph</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateGraph</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">updateGraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">grpah</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_graph <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span><span class=\"token function\">getNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> node</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"compute-layout\"><a href=\"#compute-layout\" aria-label=\"compute layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compute layout</h2>\n<p>GraphGL will call <code class=\"language-text\">start()</code> of the layout to kick start the layout calculation.\nIn this case, the computation is easy as assigning random position for each node only.\nOnce the layout is completed, you will need to call <code class=\"language-text\">this._callbacks.onLayoutChange()</code> to notify the render redraw.\nThen call <code class=\"language-text\">this._callbacks.onLayoutDone()</code> to notify the render that layout is completed.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>viewportWidth<span class=\"token punctuation\">,</span> viewportHeight<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> nodeId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> viewportWidth<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> viewportHeight<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_callbacks<span class=\"token punctuation\">.</span><span class=\"token function\">onLayoutChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_callbacks<span class=\"token punctuation\">.</span><span class=\"token function\">onLayoutDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"getters\"><a href=\"#getters\" aria-label=\"getters permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getters</h2>\n<p>GraphGL will keep retrieving the position of nodes and edges from the layout. You will need to provide two getters <code class=\"language-text\">getNodePosition</code> and <code class=\"language-text\">getEdgePosition</code>.</p>\n<ul>\n<li>getNodePosition: return the position of the node [x, y].</li>\n<li>getEdgePosition: return the rendering information of the edge, including:\n-- type: the type of the edge, it should be 'LINE', 'SPLINE<em>CURVE', or 'PATH'.\n-- sourcePosition: the position of source node.\n-- targetPosition: the position of target node.\n-- controlPoints: a set of control points for 'SPLINE</em>CURVE', or 'PATH' edge.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function-variable function\">getNodePosition</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">getEdgePosition</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">edge</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> sourcePos <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>edge<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceNodeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> targetPos <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>edge<span class=\"token punctuation\">.</span><span class=\"token function\">getTargetNodeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token constant\">EDGE_TYPE</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LINE</span><span class=\"token punctuation\">,</span>\n      sourcePosition<span class=\"token punctuation\">:</span> sourcePos<span class=\"token punctuation\">,</span>\n      targetPosition<span class=\"token punctuation\">:</span> targetPos<span class=\"token punctuation\">,</span>\n      controlPoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"full-source-code\"><a href=\"#full-source-code\" aria-label=\"full source code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Full source code</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>BaseLayout<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'graph.gl'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RandomLayout</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseLayout</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> <span class=\"token string\">'RandomLayout'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>defaultOptions<span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>options<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// first time to pass the graph data into this layout</span>\n  <span class=\"token function\">initializeGraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">graph</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateGraph</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// update the existing graph</span>\n  <span class=\"token function\">updateGraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">grpah</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_graph <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span><span class=\"token function\">getNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> node</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>viewportWidth<span class=\"token punctuation\">,</span> viewportHeight<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> nodeId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> viewportWidth<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> viewportHeight<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_callbacks<span class=\"token punctuation\">.</span><span class=\"token function\">onLayoutChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_callbacks<span class=\"token punctuation\">.</span><span class=\"token function\">onLayoutDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">getNodePosition</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">getEdgePosition</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">edge</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> sourcePos <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>edge<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceNodeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> targetPos <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nodePositionMap<span class=\"token punctuation\">[</span>edge<span class=\"token punctuation\">.</span><span class=\"token function\">getTargetNodeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token constant\">EDGE_TYPE</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LINE</span><span class=\"token punctuation\">,</span>\n      sourcePosition<span class=\"token punctuation\">:</span> sourcePos<span class=\"token punctuation\">,</span>\n      targetPosition<span class=\"token punctuation\">:</span> targetPos<span class=\"token punctuation\">,</span>\n      controlPoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":4,"excerpt":"Write your own custom layout Here's the method you will likely to implement when creating your own custom layout: We will start with a  as…","frontmatter":{"title":"Write your own custom layout","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{"":"/docs/advanced/custom-layout","docs/advanced/custom-layout.md":"/docs/advanced/custom-layout","docs/advanced/custom-layout":"/docs/advanced/custom-layout","../../api-reference/edge-style-flow.md":"/docs/api-reference/edge-style-flow","docs/api-reference/edge-style-flow.md":"/docs/api-reference/edge-style-flow","../../api-reference/edge-style-flow":"/docs/api-reference/edge-style-flow","docs/api-reference/edge-style-flow":"/docs/api-reference/edge-style-flow","../gallery.md":"/docs/advanced/gallery","docs/advanced/gallery.md":"/docs/advanced/gallery","../gallery":"/docs/advanced/gallery","docs/advanced/gallery":"/docs/advanced/gallery","../../api-reference/edge-style.md":"/docs/api-reference/edge-style","docs/api-reference/edge-style.md":"/docs/api-reference/edge-style","../../api-reference/edge-style":"/docs/api-reference/edge-style","docs/api-reference/edge-style":"/docs/api-reference/edge-style","../../api-reference/edge.md":"/docs/api-reference/edge","docs/api-reference/edge.md":"/docs/api-reference/edge","../../api-reference/edge":"/docs/api-reference/edge","docs/api-reference/edge":"/docs/api-reference/edge","../../api-reference/edge-style-label.md":"/docs/api-reference/edge-style-label","docs/api-reference/edge-style-label.md":"/docs/api-reference/edge-style-label","../../api-reference/edge-style-label":"/docs/api-reference/edge-style-label","docs/api-reference/edge-style-label":"/docs/api-reference/edge-style-label","../../api-reference/graph.md":"/docs/api-reference/graph","docs/api-reference/graph.md":"/docs/api-reference/graph","../../api-reference/graph":"/docs/api-reference/graph","docs/api-reference/graph":"/docs/api-reference/graph","../../api-reference/node-style-marker.md":"/docs/api-reference/node-style-marker","docs/api-reference/node-style-marker.md":"/docs/api-reference/node-style-marker","../../api-reference/node-style-marker":"/docs/api-reference/node-style-marker","docs/api-reference/node-style-marker":"/docs/api-reference/node-style-marker","../../api-reference/node-style-rectangle.md":"/docs/api-reference/node-style-rectangle","docs/api-reference/node-style-rectangle.md":"/docs/api-reference/node-style-rectangle","../../api-reference/node-style-rectangle":"/docs/api-reference/node-style-rectangle","docs/api-reference/node-style-rectangle":"/docs/api-reference/node-style-rectangle","../../api-reference/node-style-circle.md":"/docs/api-reference/node-style-circle","docs/api-reference/node-style-circle.md":"/docs/api-reference/node-style-circle","../../api-reference/node-style-circle":"/docs/api-reference/node-style-circle","docs/api-reference/node-style-circle":"/docs/api-reference/node-style-circle","../../api-reference/node-style-label.md":"/docs/api-reference/node-style-label","docs/api-reference/node-style-label.md":"/docs/api-reference/node-style-label","../../api-reference/node-style-label":"/docs/api-reference/node-style-label","docs/api-reference/node-style-label":"/docs/api-reference/node-style-label","../../README.md":"/docs","docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../roadmap.md":"/docs/roadmap","docs/roadmap.md":"/docs/roadmap","../../roadmap":"/docs/roadmap","docs/roadmap":"/docs/roadmap","../../api-reference/node-style.md":"/docs/api-reference/node-style","docs/api-reference/node-style.md":"/docs/api-reference/node-style","../../api-reference/node-style":"/docs/api-reference/node-style","docs/api-reference/node-style":"/docs/api-reference/node-style","../../api-reference/graphgl.md":"/docs/api-reference/graphgl","docs/api-reference/graphgl.md":"/docs/api-reference/graphgl","../../api-reference/graphgl":"/docs/api-reference/graphgl","docs/api-reference/graphgl":"/docs/api-reference/graphgl","../../api-reference/node.md":"/docs/api-reference/node","docs/api-reference/node.md":"/docs/api-reference/node","../../api-reference/node":"/docs/api-reference/node","docs/api-reference/node":"/docs/api-reference/node"},"slug":"docs/advanced/custom-layout","toc":"docs"}}}